apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-{{ .Values.postgres.name }}
spec:
  serviceName: {{ .Release.Name }}-{{ .Values.postgres.serviceName }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-{{ .Values.postgres.name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-{{ .Values.postgres.name }}
    spec:
      containers:
      - name: {{ .Release.Name }}-{{ .Values.postgres.name }}
        image: {{ .Values.postgres.image }}
        ports:
        - containerPort: {{ .Values.postgres.containerPort }}
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-{{ .Values.mapname.secret }}
              key: DATABASE_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-{{ .Values.mapname.secret }}
              key: DATABASE_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: {{ .Release.Name }}-{{ .Values.mapname.config }}
              key: DATABASE_NAME
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: postgres-storage
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: manual
      resources:
        requests:
          storage: {{ .Values.postgres.storage }}